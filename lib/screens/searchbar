import 'dart:convert';

import 'package:falamhymns/models/sawnawk_model.dart';
import 'package:falamhymns/sub_screens/detail_screen.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart' as rootBundle;

class SawnawkScreen extends StatefulWidget {
  SawnawkScreen({Key? key}) : super(key: key);

  @override
  State<SawnawkScreen> createState() => _SawnawkScreenState();
}

class _SawnawkScreenState extends State<SawnawkScreen> {
  TextEditingController controller = new TextEditingController();
  List<SawnAwkModel> _searchResult = [];
  List<SawnAwkModel> _userDetails = [];

  @override
  void initState() {
    super.initState();
    ReadJsonData();
  }

  onSearchTextChanged(String text) async {
    _searchResult.clear();

    if (text.isEmpty) {
      setState(() {});
      return;
    }

    _userDetails.forEach((userDetails) {
      if (userDetails.titleFalam.contains(text) ||
          userDetails.titleEnglish.contains(text))
        _searchResult.add(userDetails);
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        body: FutureBuilder(
            future: ReadJsonData(),
            builder: (context, data) {
              return new Column(
                children: <Widget>[
                  new Container(
                    color: Colors.blue,
                    child: new Padding(
                        padding: const EdgeInsets.all(8.0),
                        child: new Card(
                            child: new ListTile(
                          leading: new Icon(Icons.search),
                          title: new TextField(
                            controller: controller,
                            decoration: new InputDecoration(
                                hintText: 'Search', border: InputBorder.none),
                            onChanged: onSearchTextChanged,
                          ),
                          trailing: new IconButton(
                            icon: new Icon(Icons.cancel),
                            onPressed: () {
                              controller.clear();
                              onSearchTextChanged('');
                            },
                          ),
                        ))),
                  ),
                  new Expanded(
                      child: _searchResult.length != 0 ||
                              controller.text.isNotEmpty
                          ? ListView.builder(itemBuilder: (context, index) {
                              return Card(
                                elevation: 5,
                                margin: EdgeInsets.symmetric(
                                    horizontal: 10, vertical: 6),
                                child: new InkWell(
                                  onTap: () {
                                    Navigator.push(
                                        context,
                                        MaterialPageRoute(
                                          builder: (context) => DetailScreen(
                                              _userDetails[index].pageNumber),
                                        ));
                                  },
                                  child: Container(
                                    padding: EdgeInsets.only(bottom: 8),
                                    child: Column(
                                      mainAxisAlignment:
                                          MainAxisAlignment.center,
                                      crossAxisAlignment:
                                          CrossAxisAlignment.center,
                                      children: [
                                        Padding(
                                          padding: EdgeInsets.all(8),
                                          child: Text(_userDetails[index]
                                              .titleFalam
                                              .toString()),
                                        ),
                                        Padding(
                                          padding: EdgeInsets.all(8),
                                          child: Text(_userDetails[index]
                                              .titleEnglish
                                              .toString()),
                                        ),
                                      ],
                                    ),
                                  ),
                                ),
                              );
                            })
                          : new ListView.builder(
                              itemCount: _userDetails.length,
                              itemBuilder: (context, index) {
                                return new Card(
                                  child: new ListTile(
                                      title: new Text(
                                          _userDetails[index].titleFalam)),
                                );
                              }))
                ],
              );
            }));
  }
}

Future<List<SawnAwkModel>> ReadJsonData() async {
  final jsondata =
      await rootBundle.rootBundle.loadString('data/sawnawk_data.json');
  final list = json.decode(jsondata) as List<dynamic>;

  return list.map((e) => SawnAwkModel.fromJson(e)).toList();
}
